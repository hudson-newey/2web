root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  args_bin = []
  # The cache works over the modified time of input files.
  # However, during builds, the binary might change without the input files
  # changing
  bin = "./tmp/main -i dev/ -o dist/ --no-cache"
  # Using a small file is helpful for debugging the lexer and parser because
  # there is less debug info to sift through.
  # bin = "./tmp/main -i dev/small-file.html -o dist/ --no-cache --verbose-lexer --verbose-ast"
  # bin = "./tmp/main -i dev/ -o dist/ --production"
  cmd = "go build -o ./tmp/main ./src"
  delay = 1
  exclude_dir = ["assets", "tmp", "vendor", "testdata"]
  exclude_file = []
  exclude_regex = ["_test.go"]
  exclude_unchanged = false
  follow_symlink = false
  full_bin = ""
  include_dir = ["src", "dev", "public"]
  include_ext = ["go", "tpl", "tmpl", "html", "css", "js", "json", "yml", "toml", "md"]
  include_file = []
  kill_delay = "0s"
  log = "build-errors.log"
  poll = false
  poll_interval = 0
  post_cmd = []
  pre_cmd = []
  rerun = false
  rerun_delay = 500
  send_interrupt = false
  stop_on_error = true

[color]
  app = ""
  build = "yellow"
  main = "magenta"
  runner = "green"
  watcher = "cyan"

[log]
  main_only = false
  silent = false
  time = false

[misc]
  clean_on_exit = false

[proxy]
  app_port = 0
  enabled = false
  proxy_port = 0

[screen]
  clear_on_rebuild = true
  keep_scroll = true
